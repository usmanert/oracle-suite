name: Build & Publish Docker Images
# Build & Push rebuilds the tendermint docker image on every push to master and creation of tags
# and pushes the image to https://hub.docker.com/r/interchainio/simapp/tags
on:
  workflow_dispatch: # Allow manual trigger
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+

    branches:
      - master
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: ghcr.io/chronicleprotocol/oracle-suite
          - dockerfile: ./Dockerfile-gofer
            image: ghcr.io/chronicleprotocol/gofer
          - dockerfile: ./Dockerfile-ghost
            image: ghcr.io/chronicleprotocol/ghost
          - dockerfile: ./Dockerfile-lair
            image: ghcr.io/chronicleprotocol/lair
          - dockerfile: ./Dockerfile-leeloo
            image: ghcr.io/chronicleprotocol/leeloo
          - dockerfile: ./Dockerfile-rpc-splitter
            image: ghcr.io/chronicleprotocol/rpc-splitter
          - dockerfile: ./Dockerfile-spectre
            image: ghcr.io/chronicleprotocol/spectre
          - dockerfile: ./Dockerfile-spire
            image: ghcr.io/chronicleprotocol/spire
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2.3.5

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Docker metadata (tags, labels, etc)
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Docker build and Push images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
